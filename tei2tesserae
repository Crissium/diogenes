#!/usr/bin/perl -w

use strict;
use warnings;

use XML::LibXML;

# output from phi2tei is input to us
my $indir = 'output';
opendir( my $dh, $indir ) or die "Could not open $indir\n";

my $outdir = 'tess';
use File::Path qw(remove_tree);
if (-e $outdir) {
    remove_tree($outdir);
}
mkdir $outdir;
chdir $outdir;

my ($author, $work);

while(readdir $dh) {
    my $file = $_;
     next unless $file =~ m/0448001/;
#      next unless $file =~ m/1020003/;
    next if $file =~ m/^\./;
    next if $file =~ m/authtab/;
    next if $file =~ m/tmp/;
    next if $file =~ m/9999001/;
    #     open(my $fh, "<", "../$indir/$file")
    #         or die "cannot open $file: $!";
    process("../$indir/$file");
}
closedir $dh;

my (%div);
    
sub process {
    my $file = shift;

    my $parser = XML::LibXML->new();
    my $xmldoc = $parser->parse_file($file);

    $author =
        $xmldoc->getElementsByTagName('author')->[0]->textContent;
    if ($author) {
        print "$author\n";
    }
    else {
        die "No author for $file";
    }
    $author =~ s/\s+/_/g;
    $work = $xmldoc->getElementsByTagName('title')->[0]->textContent;
    if ($work) {
        print "  $work ($file)\n";
#         return;
    }
    else {
        die "No work for $file";
    }
    $work =~ s/\s+/_/g;
    
    foreach my $node ($xmldoc->getElementsByTagName('body')) {
        process_node($node);
        
    }
}

my @levels;

my ($state, $line);
sub process_node {
    my $node = shift;
    my $name = $node->nodeName;
    #     print "$name\n";
    if ($name eq 'div') {
        my $n = $node->getAttribute('n');
        my $t = $node->getAttribute('type');
        $div{$t} = $n;
        push @levels, $t;
        $state = 1;
        #          print "Foo $t $n \n";
#         print join ':', @levels, "\n";
    }
    elsif ($name eq 'l') {
        $line = $node->getAttribute('n');
        $state = 1;        
    }
    elsif ($name eq 'head') {
        return;
    }

    # Text content
    if ($node->nodeValue) {
        if ($state) {
#             print join ',', @levels;
            my $out = "\n<$author.$work ";
            foreach my $level ( @levels ) {
                $out .= $div{$level}.".";
            }
            if ($line) {
                $out .= $line
            }
            else {
                chop $out;
            }
            $out .= "> ";
            print "$out";
            $state = 0;
            $line = '';
        }
        my $text = $node->nodeValue;
        $text =~ s/\s*\n\s*/ /g;
        print $text;
    }
    foreach my $child ($node->nonBlankChildNodes) {
        process_node($child);
    }
    if ($name eq 'div') {
        pop @levels;
    }
}


